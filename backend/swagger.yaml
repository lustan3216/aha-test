openapi: 3.0.0

info:
  version: "1.0.0"
  title: "Aha-test Api Document"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "et3216@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

servers:
  - url: https://aha-api.firstage.io

tags:
  - name: user
    description: User API
  - name: me
    description: Me API
  - name: statistic
    description: Statistic API
  - name: auth
    description: Auth API
  - name: email-verify
    description: Email Verify API

components:
  securitySchemes:
    cookieAuth:         # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: Authorization
      description: The token will be saved in cookie autimatically after login. Acutally, no need to save it manually.
  schemas:
    Token:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          default: yJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsImlhdCI6MTY0ODkxNTA5NSwiZXhwIjoxNjQ4OTE4Njk1fQ.GubAZD2Fc_8YgBHslsWOnhMEtnDasfBLqqYokSLDWok
          description: Token for fetch data
    User:
      type: object
      required:
        - email
        - password
      properties:
        id:
          type: integer
          description: user Id
          default: 123
        email:
          type: string
          description: Email
          default: aha@gmail.com
        username:
          type: string
          description: Username
          default: username
        provider:
          type: string
          enum:
            - LOCAL
            - GOOGLE
            - FACEOOK
          description: Account provider
        isVerify:
          type: boolean
          description: Is verify by email link or not
          default: false
        activedAt:
          type: string
          description: Timestamp of the last user session
          default: 2022-04-01T05:00:34.428Z
        createdAt:
          type: string
          description: Timestamp of user sign up
          default: 2022-04-01T05:00:34.428Z
        updatedAt:
          type: string
          description: Timestamp of user updated
          default: 2022-04-01T05:00:34.428Z
        loginCount:
          type: string
          description: Number of times logged in.
          default: 1

paths:
  /v1/signup:
    post:
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                passwordConfirm:
                  type: string
              required:
                - email
                - password
                - passwordConfirm
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: 'Wrong parameters'
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/login:
    post:
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: integer
              required:
                - email
                - password
      responses:
        200:
          description: >
            Successfully authenticated.
            Header with `Set-Cookie` to store the token in the client side.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: Authorization=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: 'Wrong parameters'
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/login/google:
    post:
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
              required:
                - accessToken
      responses:
        200:
          description: >
            Successfully authenticated.
            Header with `Set-Cookie` to store the token in the client side.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: Authorization=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: 'Wrong parameters'
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/login/facebook:
    post:
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
              required:
                - accessToken
      responses:
        200:
          description: >
            Successfully authenticated.
            Header with `Set-Cookie` to store the token in cookie.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: Authorization=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: 'Wrong parameters'
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/logout:
    post:
      tags:
        - auth
      responses:
        200:
          description: >
            Successfully logout.
            Clear out the token of the cookie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/statistics:
    get:
      tags:
        - statistic
      parameters:
        - name: timezone
          in: query
          description: The clientside timezone
          schema:
            type: string
      security:
        - cookieAuth: []
      summary: Get user statistics
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Total number of users who have signed up.
                  todayActiveUser:
                    type: integer
                    description: Total number of users with active sessions today.
                  averageIn7:
                    type: integer
                    description: Average number of active session users in the last 7 days rolling.

        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/email-verify/:token:
    get:
      tags:
        - email-verify
      summary: A link in the verification email,  it will redirect to dashboard when verify success.
      parameters:
        - name: token
          in: path
          description: token
          required: true
          schema:
            type: string
            default: yJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjYsImlhdCI6MTY0ODkxNTA5NSwiZXhwIjoxNjQ4OTE4Njk1fQ.GubAZD2Fc_8YgBHslsWOnhMEtnDasfBLq
      responses:
        200:
          description: "Success"
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/email-verify:
    post:
      tags:
        - email-verify
      security:
        - cookieAuth: []
      summary: Send the verification email
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: The email address to be sent
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'


  /v1/me:
    get:
      tags:
        - me
      summary: Get self profile
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

    patch:
      tags:
        - me
      summary: Only username can be updated
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/me/reset-password:
    patch:
      tags:
        - me
      summary: Update password
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
                newPasswordConfirm:
                  type: string
              required:
                - newPassword
                - oldPassword
                - newPasswordConfirm
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'

  /v1/users:
    get:
      tags:
        - user
      summary: Get all users
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: The number of page

      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: The users data
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/User'
                        - $ref: '#/components/schemas/User'
                  meta:
                    type: object
                    properties:
                      currentPage:
                        description: Current Page
                        type: number
                      total:
                        description: All users count
                        type: number

        401:
          description: 'Wrong authentication token'
        500:
          description: 'Server Error'
